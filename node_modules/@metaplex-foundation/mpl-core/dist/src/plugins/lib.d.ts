import { Option } from '@metaplex-foundation/umi';
import { PluginHeaderV1, Plugin as BasePlugin, RegistryRecord, PluginAuthorityPair, ExternalPluginAdapterSchema } from '../generated';
import { CreatePluginArgs, AssetAllPluginArgsV2, PluginAuthorityPairHelperArgs, AssetPluginAuthorityPairArgsV2, PluginsList } from './types';
import { PluginAuthority } from './pluginAuthority';
export declare function formPluginHeaderV1(pluginRegistryOffset: bigint): Omit<PluginHeaderV1, 'publicKey' | 'header'>;
/**
 * @deprecated Use the new 1.0 sdk instruction helpers like `create` instead of `createV1` which no longer require sub create functions like this.
 * @param args
 * @returns
 */
export declare function createPlugin(args: CreatePluginArgs): BasePlugin;
/**
 * @deprecated Use the new 1.0 sdk instruction helpers like `create` instead of `createV1` which no longer require sub create functions like this.
 * @param args
 * @returns
 */
export declare function pluginAuthorityPair(args: PluginAuthorityPairHelperArgs): PluginAuthorityPair;
export declare function createPluginV2(args: AssetAllPluginArgsV2): BasePlugin;
/**
 * @deprecated Use the new 1.0 sdk instruction helpers like `create` instead of `createV1` which no longer require sub create functions like this.
 * @param args
 * @returns
 */
export declare function pluginAuthorityPairV2({ type, authority, ...args }: AssetPluginAuthorityPairArgsV2): PluginAuthorityPair;
export declare function mapPluginFields(fields: Array<Record<string, any>>): Record<string, any>;
export declare function mapPlugin({ plugin: plug, authority, offset, }: {
    plugin: Exclude<BasePlugin, {
        __kind: 'Reserved';
    }>;
    authority: PluginAuthority;
    offset: bigint;
}): PluginsList;
export declare function registryRecordsToPluginsList(registryRecords: RegistryRecord[], accountData: Uint8Array): PluginsList;
export declare function pluginKeyToPluginType(pluginKey: keyof PluginsList): "AddBlocker" | "Attributes" | "Autograph" | "BurnDelegate" | "Royalties" | "FreezeDelegate" | "TransferDelegate" | "UpdateDelegate" | "PermanentFreezeDelegate" | "PermanentTransferDelegate" | "PermanentBurnDelegate" | "Edition" | "MasterEdition" | "ImmutableMetadata" | "VerifiedCreators";
export declare function parseExternalPluginAdapterData(plugin: {
    schema: ExternalPluginAdapterSchema;
}, record: {
    dataLen: Option<bigint | number>;
    dataOffset: Option<bigint | number>;
}, account: Uint8Array): any;
